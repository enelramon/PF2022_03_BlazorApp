@page "/Registro tecnico"
@page "/tecnico/{tecnicoId:int}"

@inject TecnicosBLL tecnicosBLL
@inject NotificationService notificationService

<EditForm Model="tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="rz-border-radius-4 shadow d-block p-2 border border-4 bg-white">
        <div class="rz-border-radius-4 shadow card-header text-center">
            <h3>Registro de Técnicos</h3>
        </div>

        <div class="rz-border-radius-4 shadow border border-4 card card-body">
            <div class="container overflow-hidden">
                <form class="row gy-3">
                    @*TecnicoId*@
                    <div class="form-row align-items-center">
                        <div class="col-ms">
                            <label>TecnicoId</label>
                            <div class="input-group mb-3">
                                <InputNumber @bind-Value="tecnico.TecnicoId"
                                    class="rz-border-radius-4 shadow form-control" />
                                <div class="input-group-append">
                                    <div class="input-group-append">
                                        <button type="button"
                                            class="rz-border-radius-4 shadow form-control col-4 btn btn-primary  "
                                            @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*Nombre*@
                        <div class="col-ms">
                            <label>Nombres </label>
                            <InputText @bind-Value="tecnico.Nombres" placeholder="Ingrese su nombre"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Nombres)" />
                        </div>

                        @*Dirección*@
                        <div class="col-ms">
                            <label>Dirección </label>
                            <InputText @bind-Value="tecnico.Direccion" placeholder="Ingrese su dirección"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Direccion)" />
                        </div>

                        @*Fecha*@
                        <div class="col-ms">
                            <label>Fecha </label>
                            <InputDate @bind-Value="tecnico.Fecha" class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Fecha)" />
                        </div>

                        @*Cédula*@
                        <div class="col-ms">
                            <label>Cédula </label>
                            <InputText @bind-Value="tecnico.Cedula" placeholder="Ejemplo 123-1234567-8"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Cedula)" />
                        </div>

                        @*Email*@
                        <div class="col-ms">
                            <label>Email </label>
                            <InputText @bind-Value="tecnico.Email" placeholder="Usuario@gmail.com"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Email)" />
                        </div>

                        @*Teléfono*@
                        <div class="col-ms">
                            <label>Teléfono </label>
                            <InputText @bind-Value="tecnico.Telefono" placeholder="Ejemplo 123-123-1234"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Telefono)" />
                        </div>

                        @*Celular*@
                        <div class="col-ms">
                            <label>Celular </label>
                            <InputText @bind-Value="tecnico.Celular" placeholder="Ejemplo 123-123-1234"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Celular)" />
                        </div>
                        @*Usuario*@
                        <div class="col-ms">
                            <label>Usuario </label>
                            <InputText @bind-Value="tecnico.usuario" placeholder="Ingrese su usuario"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.usuario)" />
                        </div>
                        @*Clave*@
                        <div class="col-ms">
                            <label>Clave </label>
                            <InputText type="password" @bind-Value="tecnico.Clave" placeholder="Ingrese su clave"
                                class="rz-border-radius-4 shadow form-control" />
                            <ValidationMessage For="@(() => tecnico.Clave)" />
                        </div>

                    </div>
                </form>
            </div>
            <div class="card-footer">
                <div class="mb-3 text-center" display: inline-block>
                    <button type="button" class="rz-border-radius-4 btn btn-primary btn-lg" @onclick="Nuevo">
                        <i class="oi oi-document" /> Nuevo
                    </button>
                    <button type="submit" class="rz-border-radius-4 btn btn-success btn-lg">
                        <i class="bi bi-save-fill" /> Guardar
                    </button>
                    <button type="button" class="rz-border-radius-4 btn btn-danger btn-lg" @onclick="Eliminar">
                        <i class="oi oi-trash" /> Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code
{
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos tecnico { get; set; } = new Tecnicos();
    public String mensaje { get; set; } = "";

    private List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();

    protected async override Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicosBLL.GetList(t => true);

        if (TecnicoId > 0)
        {
            this.tecnico.TecnicoId = TecnicoId;
            await this.Buscar();
        }
    }
    private async Task Buscar()
    {
        if (tecnico.TecnicoId > 0)
        {
            var encontrado = await tecnicosBLL.Buscar(tecnico.TecnicoId);

            if (encontrado != null)
                this.tecnico = encontrado;
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "No Existe este tecnico"
            });
        }
    }

    public void Nuevo()
    {
        mensaje = "";
        tecnico = new Tecnicos();
    }

    public async Task Guardar()
    {

        bool guardo = await tecnicosBLL.Guardar(tecnico);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });

            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        bool elimino;

        elimino = await tecnicosBLL.Eliminacion(tecnico);
        if (elimino)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Fue eliminado correctamente."
            });
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "No fue Eliminado, intentar nuevamente o esta intentado eliminar sin datos."
            });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}