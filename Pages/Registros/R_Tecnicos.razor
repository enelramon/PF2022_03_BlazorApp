@page "/Registro técnico"
@page "/técnico/{técnicoId:int}"

@inject técnicosBLL técnicosBLL
@inject NotificationService notificationService

<EditForm Model="técnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg">
        <div class="card-header">
            <h3>Registro De técnico</h3>

        </div>
        <div class="card-body">
            @*técnicoId*@
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>técnicoId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="técnico.técnicoId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                    <i class="oi oi-magnifying-glass" /> Buscar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Nombres*@
            <div class="btn-bg">
                <label>Nombre</label>
                <InputText @bind-Value="técnico.Nombres" class="form-control" placeholder="Nombre" />
                <ValidationMessage For="@(() => técnico.Nombres)" />
            </div>

            @*Direccion*@
            <div class="form-group">
                <label>Dirección</label>
                <InputText @bind-Value="técnico.Direccion" class="form-control" placeholder="Dirección" />
                <ValidationMessage For="@(() => técnico.Direccion)" />
            </div>
            @*Cedula*@
            <div class="form-group">
                <label>Cédula</label>
                <InputText @bind-Value="técnico.Cedula" class="form-control" placeholder="Cédula Ejemplo 123-1234567-8"/>
                <ValidationMessage For="@(() => técnico.Cedula)" />
            </div>
            @*Email*@
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="técnico.Email" class="form-control" placeholder="Email "/>
                <ValidationMessage For="@(() => técnico.Email)" />
            </div>
            @*Telefono*@
            <div class="form-group">
                <label>Teléfono</label>
                <InputText @bind-Value="técnico.Telefono" class="form-control" placeholder="Teléfono ejemplo 123-123-1234" />
                <ValidationMessage For="@(() => técnico.Telefono)" />
            </div>
            @*Celular*@
            <div class="form-group">
                <label>Celular</label>
                <InputText @bind-Value="técnico.Celular" class="form-control" placeholder="Celular ejemplo 123-123-1234" />
                <ValidationMessage For="@(() => técnico.Celular)" />
            </div>
            @*usuario*@
            <div class="form-group">
                <label>Usuario</label>
                <InputText @bind-Value="técnico.usuario" class="form-control" placeholder="Usuario"/>
                <ValidationMessage For="@(() => técnico.usuario)" />
            </div>
            @*Clave*@
            <div class="form-group">
                <label>Clave</label>
                <InputText type="password" @bind-Value="técnico.Clave" class="form-control" placeholder="Clave"/>
                <ValidationMessage For="@(() => técnico.Clave)" />
            </div>
            @*Fecha*@
            <div class="form-group">
                <label>Fecha</label>
                <InputDate @bind-Value="técnico.Fecha" class="form-control" />
                <ValidationMessage For="@(() => técnico.Fecha)" />
            </div>
        </div>
        <h1>
            <span class="text-danger">@mensaje</span>
        </h1>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class="oi oi-file" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success">
                    <i class="oi oi-document" /> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <i class="oi oi-trash" /> Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int técnicoId { get; set; }
    public técnicos técnico { get; set; } = new técnicos();
    public String mensaje { get; set; } = "";

    private List<técnicos> Listatécnicos { get; set; } = new List<técnicos>();

    protected async override Task OnInitializedAsync()
    {
        Listatécnicos = await técnicosBLL.GetList(t => true);

        if (técnicoId > 0)
        {
            this.técnico.técnicoId = técnicoId;
            await this.Buscar();
        }
    }
    private async Task Buscar()
    {
        if (técnico.técnicoId > 0)
        {
            var encontrado = await técnicosBLL.Buscar(técnico.técnicoId);

            if (encontrado != null)
                this.técnico = encontrado;
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "No Existe este técnico"
            });
        }
    }

    public void Nuevo()
    {
        mensaje = "";
        técnico = new técnicos();
    }

    public async Task Guardar()
    {

        bool guardo = await técnicosBLL.Guardar(técnico);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });

            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        bool elimino;

        elimino = await técnicosBLL.Eliminacion(técnico);
        if (elimino)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Fue eliminado correctamente."
            });
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "No fue Eliminado, intentar nuevamente o esta intentado eliminar sin datos."
            });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}