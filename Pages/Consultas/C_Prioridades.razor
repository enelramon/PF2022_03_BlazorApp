@page "/C_Prioridades"
@inject PrioridadesBLL prioridadesBLL


<EditForm Model="lista">
    <DataAnnotationsValidator />
    <div class="rz-border-radius-4 shadow bg-white d-block p-2 border border-4">
        <div class="rz-border-radius-4 shadow card-header text-center">
            <h3>Consultas de Prioridades</h3>

        </div>


        <div class="rz-border-radius-4 shadow border border-4 card card-body">
            <div class="container overflow-hidden">
                <form>
                    <div class="row">
                        <div class="col">
                            <label class="form-label">Filtro</label>
                            <select class="rz-border-radius-4 shadow form-control col-4" @bind="Filtro">
                                <option value="0">Selecione un Filtro</option>
                                <option value="1">PrioridadId</option>
                                <option value="2">Descripcion</option>
                                <option value="3">Orden</option>
                            </select>
                        </div>
                        <div class="col">
                            <div class="input-group d-flex align-items-end">
                                <label class="form-label">Buscar</label>
                                <div class="input-group">
                                    <input type="text" class="rz-border-radius-4 shadow form-control col-4" @bind="Criterio" />
                                    <button type="button" class="rz-border-radius-4 shadow btn btn-info input-group-text" @onclick="Buscar">
                                        <i class="oi oi-magnifying-glass" />Buscar
                                    </button>
                                </div>

                            </div>
                        </div>
                    </div>





                </form>
                <table class="table table-primary table-striped">
                    <thead class="thead-green">
                        <tr class="table-info">
                            <th>PrioridadId</th>
                            <th>Descripcion</th>
                            <th>Orden</th>
                            <th>Link</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in lista)
                        {
                            <tr>
                                <td>@item.PrioridadId</td>
                                <td>@item.Descripcion</td>
                                <td>@item.Orden</td>
                                <td><a href="R_Prioridades/@item.PrioridadId">View</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public Prioridades prioridad { get; set; } = new Prioridades();
    public List<Prioridades> lista { get; set; } = new List<Prioridades>();

    public string? Filtro { get; set; }
    public string? Criterio { get; set; }

    public void Buscar()
    {

        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "0":
                    lista = prioridadesBLL.GetList(o => true);
                    break;
                case "1":
                    if (Criterio != null)
                    {
                        lista = prioridadesBLL.GetList(o => o.PrioridadId.ToString() == (Criterio));
                    }
                    else
                    {
                        lista = prioridadesBLL.GetList(o => true);
                    }

                    break;
                case "2":
                    if (Criterio != null)
                    {
                        lista = prioridadesBLL.GetList(o => o.Descripcion.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        lista = prioridadesBLL.GetList(o => true);
                    }

                    break;
                case "3":
                    if (Criterio != null)
                    {
                        lista = prioridadesBLL.GetList(o => o.Orden.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        lista = prioridadesBLL.GetList(o => true);
                    }
                    break;
            }
        }
        else
        {
            lista = prioridadesBLL.GetList(o => true);
        }

    }
}
