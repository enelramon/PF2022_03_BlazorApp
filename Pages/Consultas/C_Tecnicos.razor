@page "/Consulta tecnico"
@inject TecnicosBLL TecnicosBLL;

<EditForm Model="Informacion">
    <DataAnnotationsValidator />
    <div class="card-header">
        <h4>Consulta de Tecnicos</h4>
    </div>
    <div class="card-body bg-white">

        <div class="input-group">
            @*Fecha*@
            <div class="col-2">
                <label> Desde</label>
                <div class="mb-3">
                    <InputDate @bind-Value="FechaDesde" class="form-control" />
                    <ValidationMessage For="@(() => FechaDesde)" />
                </div>
            </div>
            <div class="col-2 mx-3">
                <label> Hasta</label>
                <div class="mb-3">
                    <InputDate @bind-Value="FechaHasta" class="form-control" />
                    <ValidationMessage For="@(() => FechaHasta)" />
                </div>
            </div>
        </div>

        <div class="col-2 mx-3">
            <div class="row">
                <select class="form-select" @bind="Filtro">
                    <option disabled selected>Seleccione</option>
                    <option value="Todo">Todo</option>
                    <option value="TecnicoId">TecnicoId</option>
                    <option value="Nombres">Nombre</option>
                    <option value="Direccion">Dirección</option>
                    <option value="Celular">Celular</option>
                    <option value="Email">Email</option>
                    <option value="Telefono">Telefono</option>
                    <option value="Cedula">Cedula</option>
                    <option value="Usuario">Usuario</option>
                    <option value="Fecha">Fecha</option>
                </select>
            </div>
        </div>
        <div class="col">
            <div class="input-group d-flex align-items-end">
                <label>Buscar</label>
                <div class="input-group">
                    <input type="text" class="form-control" @bind="Criterio" />
                    <button type="button" class="btn btn-info" @onclick="Buscar">
                        <i class="oi oi-magnifying-glass" /> Buscar</button>
                </div>
            </div>
        </div>
        <table class="table table-striped table-hover mt-4 table-striped" style="cursor: pointer;">
            <thead class="thead-green">
                <tr class="table-info">
                    <th>TecnicoId</th>
                    <th>Nombre</th>
                    <th>Dirección</th>
                    <th>Cédula</th>
                    <th>Email</th>
                    <th>Teléfono</th>
                    <th>Celular</th>
                    <th>Usuario</th>
                    <th>Fecha</th>
                    <th>Clave</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Informacion)
                {
                    <tr>
                        <td>@item.TecnicoId</td>
                        <td>@item.Nombres</td>
                        <td>@item.Direccion</td>
                        <td>@item.Cedula</td>
                        <td>@item.Email</td>
                        <td>@item.Telefono</td>
                        <td>@item.Celular</td>
                        <td>@item.usuario</td>
                        <td>@item.Fecha</td>
                        <td>@item.Clave</td>
                        <td><a href="tecnico/@item.TecnicoId">Ver</a></td>
                    </tr>
                }
            </tbody>
        </table>
        <h6>Tecnicos: @Informacion.Count()</h6>
    </div>

</EditForm>

@code {

    public Tecnicos tecnico { set; get; } = new Tecnicos();
    public string? Filtro { get; set; }
    public string? Criterio { get; set; }
    public DateTime FechaDesde { get; set; }
    public DateTime FechaHasta { get; set; } = DateTime.Now;
    public List<Tecnicos> Informacion { get; set; } = new List<Tecnicos>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    public async Task Buscar()
    {
        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "Todo":
                    Informacion = await TecnicosBLL.GetList(e => true);
                    break;
                case "TecnicoId":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(o => o.TecnicoId.ToString() == (Criterio));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Nombres":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(o => o.Nombres.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Direccion":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.Direccion.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Celular":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.Celular.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Email":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.Email.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Telefono":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.Telefono.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Cedula":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.Cedula.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Usuario":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(e => e.usuario.ToLower().Contains(Criterio.ToLower()));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
                case "Fecha":
                    if (Criterio != null)
                    {
                        Informacion = await TecnicosBLL.GetList(x => (x.Fecha >= FechaDesde) && (x.Fecha <= FechaHasta));
                    }
                    else
                    {
                        Informacion = await TecnicosBLL.GetList(o => true);
                    }
                    break;
            }
        }
        else
        {
            Informacion = await TecnicosBLL.GetList(o => true);
        }
    }
}